server:
  port: 443
  ssl:
    key-store: www.strin.xyz.jks
    key-store-password: 3jeuv93sz1
    key-store-type: JKS
    key-alias: www.strin.xyz

spring:
  thymeleaf:
    cache: false
    enabled: false
    http:
      multipart:
        enabled: true
        max-file-size: 1MB
        max-request-size: 3MB
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
  #加载banner
  output:
    ansi:
      enabled: always
  #配置MySQL
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://49.235./seasonal?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: 123456
    driverClassName: com.mysql.cj.jdbc.Driver
  #配置Redis
  redis:
    database: 0
    timeout:
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接池最大连接数（使用负值表示没有限制）

  #配置mongodb
  data:
    mongodb:
      database: seasonal
      host: 39.105.184.0
      port: 27017
      username:
      password:
      uri: mongodb://39.105.184.0

#  application:
#    name: rabbitmq-demo
#  rabbitmq:
#    host: localhost
#    password: guest
#    port: 15672
#    username: guest

#logging:
#  file: E:/boot.log
#  level:
#    com:
#      seasonal: debug

logging:
  file: E:/boot.log
  level:
    com:
      seasonal: debug
mybatis:
  type-aliases-package: com.seasonal.pojo
  configuration:
    map-underscore-to-camel-case: true
  #路径,在webapp文件夹下新建文件夹WEB-INF,在往下建文件夹jsp


  application:
    name: seasonal
    rabbitmq:
      # 对发布者来说，消息能收到回调
      #  //消息发送到 Broker 后触发回调，确认消息是否到达 Broker 服务器，也就是只确认是否正确到达 Exchange 中
      publisher-confirms: true
      host: localhost
      listener:
        # 并发消费者的初始化值
        concurrency: 10
        # 并发消费者的最大值
        max-concurrency: 20
        # 每个消费者每次监听时可拉取处理的消息数量
        prefetch: 5
      port: 5672
      username: guest
      password: guest


